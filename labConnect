#!/bin/bash
# If we haven't used a subOrg in a while it's token may expire. Running this will refresh all tokens
connect () {

accountName=$1
accountID=$2

echo "$accountName has the ID $accountID"
role="OrganizationAccountAccessRole"
aws sts assume-role --role-arn arn:aws:iam::$accountID:role/$role --role-session-name $accountName
aws configure set region us-east-1 --profile $accountName
aws configure set role_arn arn:aws:iam::$accountID:role/$role --profile $accountName
aws configure set source_profile default --profile $accountName
}

date

# Manually echo the details for the root account along with the Boru role
echo "[default]
output = json
region = us-east-1
role_arn = arn:aws:iam::097077863838:role/Boru
credential_source  = Ec2InstanceMetadata" > ~/.aws/config

rootOU=$(aws organizations list-roots --query 'Roots[0].[Id]' --output text)
studentOU=$(aws organizations list-organizational-units-for-parent --parent-id $rootOU --query 'OrganizationalUnits[?Name==`Students`].[Id]' --output text)
#accArray=($(aws organizations list-accounts-for-parent --parent-id ou-swz6-wzh2rgr9 --output text --query 'Accounts[*].[Name,Id]' | sort -V))
accArray=($(aws organizations list-accounts-for-parent --parent-id $studentOU --output text --query 'Accounts[*].[Name,Id]' | sort -V))
arraySize=${#accArray[@]}

i=0
while [ $i -lt $arraySize ]
do
   j=$[$i+1]
   connect ${accArray[$i]} ${accArray[$j]}
   i=$[$i+2]
done

# Repeat for AVDev orgs
rootOU=$(aws organizations list-roots --query 'Roots[0].[Id]' --output text)
devOU=$(aws organizations list-organizational-units-for-parent --parent-id $rootOU --query 'OrganizationalUnits[?Name==`Core`].[Id]' --output text)
devArray=($(aws organizations list-accounts-for-parent --parent-id $devOU --output text --query 'Accounts[*].[Name,Id]' | sort -V))
arraySize=${#devArray[@]}

i=0
while [ $i -lt $arraySize ]
do
   j=$[$i+1]
   connect ${devArray[$i]} ${devArray[$j]}
   i=$[$i+2]
done
