#!/bin/bash
function usage
{
    echo "usage: labRunning [-h]
                                      --region [-r] 	us-east-1 | all 
"
}

if [ $# -eq 0 ]
  then
    usage
    exit
fi

while [ "$1" != "" ]; do
    case $1 in
        -r | --region )         shift
                                REGIONS=$1
                                ;;
        -h | --help )           usage
                                exit
                                ;;
    esac
    shift
done

if [ $REGIONS = "all" ]
then
   REGIONS=($(aws ec2 describe-regions --query Regions[*].RegionName --output text --profile attstudent01))
fi

NumberOfAccounts=()

   #end=$[$end+1]
   #while [ $begin -lt $end ]
   for b in {1..9}
   do
      #NumberOfAccounts+=($begin)
      #begin=$[$begin+1]
      NumberOfAccounts+=($b)
      
   done

for accounts in "${NumberOfAccounts[@]}"
#for ((accounts=01;accounts<=count;accounts++))
#for accounts in $(eval echo {$begin..$count})
do
   profile="atttrain$accounts"
   case "$profile" in
	atttrain1) 
		printf "atttrain1 "
		;;
	atttrain2)
		printf "atttrain2 "
                ;;
	atttrain3)
		printf "atttrain3 "
                ;;
	atttrain4)
		printf "atttrain4 "
                ;;
        atttrain5)
                printf "atttrain5 "
                ;;
        atttrain6)
                printf "atttrain6 "
                ;;
        atttrain7)
                printf "atttrain7 "
                ;;
        atttrain8)
                printf "atttrain8 "
                ;;
        atttrain9)
                printf "atttrain9 "
                ;;
        atttrain10)
                printf "atttrain10 "
                ;;
	*)
   esac
   printf "$profile\n"
   users=($(aws iam list-users --output text --query 'Users[*].UserName' --profile $profile))
   if [ ! -z "$users" ]
   then
      printf "Users : "
      aws iam list-users --output text --query 'Users[*].UserName' --profile $profile | tr -d "\n"
      printf "\n"
   fi
   
   #ARRAY=($(aws ec2 describe-regions --query Regions[*].RegionName --output text --profile $profile))
   for region in "${REGIONS[@]}"
   do
      aws configure set region $region --profile $profile
      stacks=($(aws cloudformation describe-stacks --query Stacks[*].StackName --output text --profile $profile))
      if [ ! -z "$stacks" ]
      then
         printf "\n$profile $region Stacks : "
         for stack in "${stacks[*]}"
         do
            printf "$stack"
         done
      fi
      instances=($(aws ec2 describe-instances --query 'Reservations[*].Instances[*].[Tags[?Key==`Name`].Value]' --output text --profile $profile))
      #instances=($(aws ec2 describe-instances --query 'Reservations[*].Instances[*].[Tags[?Key==`Name`].Value,State.Name]' --output text --profile $profile))
      if [ ! -z "$instances" ]
      then
         printf "\n$profile $region Instances : "
         for instance in "${instances[*]}"
         do
            printf "$instance"
         done
         printf "\n"
      fi
      printf "."
   done
printf "\n\n"
done

